---
import BaseLayout from "../../layouts/BaseLayout.astro";
import HorizontalCard from "../../components/HorizontalCard.astro";
import { getCollection } from "astro:content";
import createSlug from "../../lib/createSlug";

export async function getStaticPaths({ paginate }) {
  const posts = await getCollection("blog") || [];

  // Default build-time sorting: newest first
  const sortedPosts = posts.sort(
    (a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf()
  );

  return paginate(sortedPosts, { pageSize: 10 });
}

const { page } = Astro.props;
---

<BaseLayout title="Blog" sideBarActiveItemID="blog">
  <div class="mb-5 flex justify-between items-center">
    <div class="text-3xl font-bold">Blog</div>
    <button id="sortToggle" class="btn btn-sm">Sort: Newest</button>
  </div>

  <ul id="postsList">
    {page.data.map((post) => (
      <li class="post-item" data-date={post.data.pubDate.toISOString()}>
        <HorizontalCard
          title={post.data.title}
          img={post.data.heroImage}
          desc={post.data.description}
          url={"/blog/" + createSlug(post.data.title, post.slug)}
          target="_self"
          badge={post.data.badge}
          tags={post.data.tags}
        />
        <div class="divider my-0" />
      </li>
    ))}
  </ul>

  <script>
    const button = document.getElementById("sortToggle");
    const postsList = document.getElementById("postsList");

    let newestFirst = true;

    button.addEventListener("click", () => {
      const posts = Array.from(postsList.children);

      posts.sort((a, b) => {
        const dateA = new Date(a.dataset.date);
        const dateB = new Date(b.dataset.date);
        return newestFirst
          ? dateA - dateB // switch to oldest first
          : dateB - dateA; // back to newest first
      });

      posts.forEach(post => postsList.appendChild(post));

      newestFirst = !newestFirst;
      button.textContent = newestFirst ? "Sort: Newest" : "Sort: Oldest";
    });
  </script>
</BaseLayout>
